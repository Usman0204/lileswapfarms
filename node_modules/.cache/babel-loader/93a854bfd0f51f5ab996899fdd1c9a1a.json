{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nvar _jsxFileName = \"/home/waleed/Quecko/lileswapfarms/src/views/Farms/components/FarmTable/FarmTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { useTable, Button, ChevronUpIcon } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport Row from './Row';\n// filter: ${({ theme }) => theme.card.dropShadow};\nconst Container = styled.div`\n  width: 100%;\n  background: ${({\n  theme\n}) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`;\n_c = Container;\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n_c2 = TableWrapper;\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`;\n_c3 = StyledTable;\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`;\n_c4 = TableBody;\nconst TableContainer = styled.div`\n  position: relative;\n}\n`;\n_c5 = TableContainer;\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`;\n_c6 = ScrollButtonContainer;\n\nconst FarmTable = props => {\n  _s();\n\n  const tableWrapperEl = useRef(null);\n  const TranslateString = useI18n();\n  const {\n    data,\n    columns\n  } = props;\n  const {\n    rows\n  } = useTable(columns, data, {\n    sortable: true\n  });\n\n  const scrollToTop = () => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TableWrapper, {\n        ref: tableWrapperEl,\n        children: /*#__PURE__*/_jsxDEV(StyledTable, {\n          children: /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.map(row => {\n              return /*#__PURE__*/_createElement(Row, { ...row.original,\n                key: `table-row-${row.id}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 24\n                }\n              });\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: scrollToTop,\n          children: [TranslateString(999, 'To Top'), /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmTable, \"c4vCfb/O5kRCL9kpjM9Azui69DI=\", false, function () {\n  return [useI18n, useTable];\n});\n\n_c7 = FarmTable;\nexport default FarmTable;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TableWrapper\");\n$RefreshReg$(_c3, \"StyledTable\");\n$RefreshReg$(_c4, \"TableBody\");\n$RefreshReg$(_c5, \"TableContainer\");\n$RefreshReg$(_c6, \"ScrollButtonContainer\");\n$RefreshReg$(_c7, \"FarmTable\");","map":{"version":3,"sources":["/home/waleed/Quecko/lileswapfarms/src/views/Farms/components/FarmTable/FarmTable.tsx"],"names":["React","useRef","styled","useTable","Button","ChevronUpIcon","useI18n","Row","Container","div","theme","card","background","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","props","tableWrapperEl","TranslateString","data","columns","rows","sortable","scrollToTop","current","scrollIntoView","behavior","map","row","original","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,aAA3B,QAA4D,yBAA5D;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAOC,GAAP,MAA8B,OAA9B;AAQA;AACA,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAI;AAC7B;AACA,gBAAgB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,IAAN,CAAWC,UAAW;AACrD;AACA;AACA,CALA;KAAMJ,S;AAON,MAAMK,YAAY,GAAGX,MAAM,CAACO,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMI,Y;AAQN,MAAMC,WAAW,GAAGZ,MAAM,CAACa,KAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,W;AASN,MAAME,SAAS,GAAGd,MAAM,CAACe,KAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,S;AASN,MAAME,cAAc,GAAGhB,MAAM,CAACO,GAAI;AAClC;AACA;AACA,CAHA;MAAMS,c;AAKN,MAAMC,qBAAqB,GAAGjB,MAAM,CAACO,GAAI;AACzC;AACA;AACA;AACA;AACA,CALA;MAAMU,qB;;AAON,MAAMC,SAAgC,GAAIC,KAAD,IAAW;AAAA;;AAClD,QAAMC,cAAc,GAAGrB,MAAM,CAAiB,IAAjB,CAA7B;AACA,QAAMsB,eAAe,GAAGjB,OAAO,EAA/B;AACA,QAAM;AAAEkB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBJ,KAA1B;AAEA,QAAM;AAAEK,IAAAA;AAAF,MAAWvB,QAAQ,CAACsB,OAAD,EAAUD,IAAV,EAAgB;AAAEG,IAAAA,QAAQ,EAAE;AAAZ,GAAhB,CAAzB;;AAEA,QAAMC,WAAW,GAAG,MAAY;AAC9BN,IAAAA,cAAc,CAACO,OAAf,CAAuBC,cAAvB,CAAsC;AACpCC,MAAAA,QAAQ,EAAE;AAD0B,KAAtC;AAGD,GAJD;;AAMA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,cAAD;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,GAAG,EAAET,cAAnB;AAAA,+BACE,QAAC,WAAD;AAAA,iCACE,QAAC,SAAD;AAAA,sBACGI,IAAI,CAACM,GAAL,CAAUC,GAAD,IAAS;AACjB,kCAAO,eAAC,GAAD,OAASA,GAAG,CAACC,QAAb;AAAuB,gBAAA,GAAG,EAAG,aAAYD,GAAG,CAACE,EAAG,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,aAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,qBAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,MAAhB;AAAuB,UAAA,OAAO,EAAEP,WAAhC;AAAA,qBACGL,eAAe,CAAC,GAAD,EAAM,QAAN,CADlB,eAEE,QAAC,aAAD;AAAe,YAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAlCD;;GAAMH,S;UAEoBd,O,EAGPH,Q;;;MALbiB,S;AAoCN,eAAeA,SAAf","sourcesContent":["import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  sortColumn?: string\n}\n\n// filter: ${({ theme }) => theme.card.dropShadow};\nconst Container = styled.div`\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n}\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const TranslateString = useI18n()\n  const { data, columns } = props\n\n  const { rows } = useTable(columns, data, { sortable: true })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {TranslateString(999, 'To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n"]},"metadata":{},"sourceType":"module"}
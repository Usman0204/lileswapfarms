{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Quecko\\\\last-update lilefarm\\\\lileswapfarms\\\\src\\\\views\\\\Pools\\\\components\\\\FarmCard\\\\FarmCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport ExpandableSectionButton from 'components/ExpandableSectionButton';\nimport DetailsSection from './DetailsSection';\nimport CardHeading from './CardHeading';\nimport CardActionsContainer from './CardActionsContainer';\nimport ApyButton from './ApyButton';\nconst RainbowLight = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`;\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 32px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`;\n_c = StyledCardAccent;\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${props => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`;\n_c2 = FCard;\nconst Divider = styled.div`\n  background-color: ${({\n  theme\n}) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`;\n_c3 = Divider;\nconst ExpandingWrapper = styled.div`\n  height: ${props => props.expanded ? '100%' : '0px'};\n  overflow: hidden;\n`;\n_c4 = ExpandingWrapper;\n\nconst FarmCard = ({\n  farm,\n  removed,\n  cakePrice,\n  bnbPrice,\n  ethPrice,\n  account,\n  provider\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const [showExpandableSection, setShowExpandableSection] = useState(false); // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n\n  const farmImage = farm.lpSymbol; // const totalValue: BigNumber = useMemo(() => {\n  //   if (!farm.lpTotalInQuoteToken) {\n  //     return null\n  //   }\n  //   if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n  //     return bnbPrice.times(farm.lpTotalInQuoteToken)\n  //   }\n  //   if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n  //     return cakePrice.times(farm.lpTotalInQuoteToken)\n  //   }\n  //   if (farm.quoteTokenSymbol === QuoteToken.ETH) {\n  //     return ethPrice.times(farm.lpTotalInQuoteToken)\n  //   }\n  //   return farm.lpTotalInQuoteToken\n  // }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n  // const totalValueFormated = totalValue\n  //   ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n  //   : '-'\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '');\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'LILE';\n  const farmAPY = farm.apy && farm.apy.toNumber().toLocaleString('en-US', {\n    maximumFractionDigits: 2\n  }); // const { quoteTokenAdresses, tokenAddresses } = farm\n  // const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, tokenAddresses })\n  // const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const depositfee = Math.round(farm.depositFeeBP * 100 * 1e12) / 1e12;\n  return /*#__PURE__*/_jsxDEV(FCard, {\n    children: [farm.tokenSymbol === 'LILE' && /*#__PURE__*/_jsxDEV(StyledCardAccent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(CardHeading, {\n      lpLabel: lpLabel,\n      multiplier: farm.multiplier // isCommunityFarm={isCommunityFarm}\n      ,\n      farmImage: farmImage,\n      tokenSymbol: farm.tokenSymbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), !removed && /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: [TranslateString(736, 'APR'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: farm.apy ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ApyButton, {\n            lpLabel: lpLabel,\n            cakePrice: cakePrice,\n            apy: farm.apy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), farmAPY, \"%\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 24,\n          width: 80\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: [TranslateString(318, 'Earn'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: earnLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: {\n          fontSize: '24px'\n        },\n        children: [TranslateString(10001, 'Deposit Fee'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        style: {\n          fontSize: '24px'\n        },\n        children: [depositfee.toPrecision(), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActionsContainer, {\n      farm: farm,\n      ethereum: provider,\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpandableSectionButton, {\n      onClick: () => setShowExpandableSection(!showExpandableSection),\n      expanded: showExpandableSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpandingWrapper, {\n      expanded: showExpandableSection,\n      children: /*#__PURE__*/_jsxDEV(DetailsSection, {\n        removed: removed,\n        bscScanAddress: `https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}` // totalValueFormated={totalValueFormated}\n        ,\n        lpLabel: lpLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmCard, \"/7QzGa49TWfuQ+pus/c7O1jkYBI=\", false, function () {\n  return [useI18n];\n});\n\n_c5 = FarmCard;\nexport default FarmCard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledCardAccent\");\n$RefreshReg$(_c2, \"FCard\");\n$RefreshReg$(_c3, \"Divider\");\n$RefreshReg$(_c4, \"ExpandingWrapper\");\n$RefreshReg$(_c5, \"FarmCard\");","map":{"version":3,"sources":["D:/Quecko/last-update lilefarm/lileswapfarms/src/views/Pools/components/FarmCard/FarmCard.tsx"],"names":["React","useState","styled","keyframes","Flex","Text","Skeleton","useI18n","ExpandableSectionButton","DetailsSection","CardHeading","CardActionsContainer","ApyButton","RainbowLight","StyledCardAccent","div","FCard","props","theme","card","background","Divider","colors","borderColor","ExpandingWrapper","expanded","FarmCard","farm","removed","cakePrice","bnbPrice","ethPrice","account","provider","TranslateString","showExpandableSection","setShowExpandableSection","farmImage","lpSymbol","lpLabel","toUpperCase","replace","earnLabel","dual","farmAPY","apy","toNumber","toLocaleString","maximumFractionDigits","depositfee","Math","round","depositFeeBP","tokenSymbol","multiplier","display","alignItems","fontSize","toPrecision","lpAddresses","process","env","REACT_APP_CHAIN_ID"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n  liquidity?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 32px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: ${(props) => props.theme.card.background};\r\n  border-radius: 32px;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  account?: string\r\n  provider?: ProviderType\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethPrice,  account ,provider}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  const farmImage = farm.lpSymbol;\r\n\r\n  // const totalValue: BigNumber = useMemo(() => {\r\n  //   if (!farm.lpTotalInQuoteToken) {\r\n  //     return null\r\n  //   }\r\n  //   if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n  //     return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n  //   }\r\n  //   if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n  //     return cakePrice.times(farm.lpTotalInQuoteToken)\r\n  //   }\r\n  //   if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n  //     return ethPrice.times(farm.lpTotalInQuoteToken)\r\n  //   }\r\n  //   return farm.lpTotalInQuoteToken\r\n  // }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  // const totalValueFormated = totalValue\r\n  //   ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n  //   : '-'\r\n\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'LILE'\r\n\r\n  const farmAPY =\r\n    farm.apy && farm.apy.toNumber().toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n\r\n  // const { quoteTokenAdresses, tokenAddresses } = farm\r\n  // const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, tokenAddresses })\r\n  // const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n  const depositfee = Math.round((farm.depositFeeBP * 100) * 1e12) / 1e12;\r\n\r\n  return (\r\n    <FCard>\r\n      {farm.tokenSymbol === 'LILE' && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        // isCommunityFarm={isCommunityFarm}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.tokenSymbol}\r\n      />\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text>{TranslateString(736, 'APR')}:</Text>\r\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n            {farm.apy ? (\r\n              <>\r\n                <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apy={farm.apy} />\r\n                {farmAPY}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{TranslateString(318, 'Earn')}:</Text>\r\n        <Text bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\r\n        <Text bold style={{ fontSize: '24px' }}>\r\n          {depositfee.toPrecision()}%\r\n        </Text>\r\n      </Flex>\r\n      <CardActionsContainer farm={farm} ethereum={provider} account={account}  />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          bscScanAddress={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\r\n          // totalValueFormated={totalValueFormated}\r\n          lpLabel={lpLabel}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useWeb3 from 'hooks/useWeb3';\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers';\nimport ifo from 'config/abi/ifo.json';\nimport erc20 from 'config/abi/erc20.json';\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json';\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json';\nimport lottery from 'config/abi/lottery.json';\nimport lotteryTicket from 'config/abi/lotteryNft.json';\nimport masterChef from 'config/abi/masterchef.json';\n\nconst useContract = (abi, address, contractOptions) => {\n  _s();\n\n  const web3 = useWeb3();\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions));\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions));\n  }, [abi, address, contractOptions, web3]);\n  return contract;\n};\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\n\n_s(useContract, \"H6vXffnD1SXpstoLQEVK5mG+lYk=\", false, function () {\n  return [useWeb3];\n});\n\nexport const useIfoContract = address => {\n  _s2();\n\n  const ifoAbi = ifo;\n  return useContract(ifoAbi, address);\n};\n\n_s2(useIfoContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useERC20 = address => {\n  _s3();\n\n  const erc20Abi = erc20;\n  return useContract(erc20Abi, address);\n};\n\n_s3(useERC20, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useCake = () => {\n  _s4();\n\n  return useERC20(getCakeAddress());\n};\n\n_s4(useCake, \"y/ZVvzRe9c+8c6LvNpWf2WrO/gU=\", false, function () {\n  return [useERC20];\n});\n\nexport const useRabbitMintingFarm = address => {\n  _s5();\n\n  const rabbitMintingFarmAbi = rabbitmintingfarm;\n  return useContract(rabbitMintingFarmAbi, address);\n};\n\n_s5(useRabbitMintingFarm, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const usePancakeRabbits = address => {\n  _s6();\n\n  const pancakeRabbitsAbi = pancakeRabbits;\n  return useContract(pancakeRabbitsAbi, address);\n};\n\n_s6(usePancakeRabbits, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useLottery = () => {\n  _s7();\n\n  const abi = lottery;\n  return useContract(abi, getLotteryAddress());\n};\n\n_s7(useLottery, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useLotteryTicket = () => {\n  _s8();\n\n  const abi = lotteryTicket;\n  return useContract(abi, getLotteryTicketAddress());\n};\n\n_s8(useLotteryTicket, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useMasterchef = () => {\n  _s9();\n\n  const abi = masterChef;\n  return useContract(abi, getMasterChefAddress());\n}; // export const useSousChef = (id) => {\n//   const config = poolsConfig.find((pool) => pool.sousId === id)\n//   const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n//   const abi = (rawAbi as unknown) as AbiItem\n//   return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n// }\n\n_s9(useMasterchef, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport default useContract;","map":{"version":3,"sources":["/home/waleed/Quecko/lileswapfarms-master/src/hooks/useContract.ts"],"names":["useEffect","useState","useWeb3","getMasterChefAddress","getCakeAddress","getLotteryAddress","getLotteryTicketAddress","ifo","erc20","rabbitmintingfarm","pancakeRabbits","lottery","lotteryTicket","masterChef","useContract","abi","address","contractOptions","web3","contract","setContract","eth","Contract","useIfoContract","ifoAbi","useERC20","erc20Abi","useCake","useRabbitMintingFarm","rabbitMintingFarmAbi","usePancakeRabbits","pancakeRabbitsAbi","useLottery","useLotteryTicket","useMasterchef"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\n// export const useSousChef = (id) => {\n//   const config = poolsConfig.find((pool) => pool.sousId === id)\n//   const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n//   const abi = (rawAbi as unknown) as AbiItem\n//   return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n// }\n\nexport default useContract\n"]},"metadata":{},"sourceType":"module"}